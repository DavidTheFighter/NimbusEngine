/*
 * TextureFormats.h
 *
 *  Created on: Sep 15, 2017
 *      Author: david
 */

#ifndef RENDERING_RENDERER_RENDERERENUMS_H_
#define RENDERING_RENDERER_RENDERERENUMS_H_

typedef enum CommandPoolFlagBits
{
	COMMAND_POOL_TRANSIENT_BIT = 0x00000001,
	COMMAND_POOL_RESET_COMMAND_BUFFER_BIT = 0x00000002,
	COMMAND_POOL_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} CommandPoolFlagBits;

typedef uint32_t CommandPoolFlags;

typedef enum CommandBufferLevel
{
	COMMAND_BUFFER_LEVEL_PRIMARY = 0,
	COMMAND_BUFFER_LEVEL_SECONDARY = 1,
	COMMAND_BUFFER_LEVEL_MAX_ENUM = 0x7FFFFFFF
} CommandBufferLevel;

typedef enum AttachmentLoadOp
{
	ATTACHMENT_LOAD_OP_LOAD = 0,
	ATTACHMENT_LOAD_OP_CLEAR = 1,
	ATTACHMENT_LOAD_OP_DONT_CARE = 2,
	ATTACHMENT_LOAD_OP_MAX_ENUM = 0x7FFFFFFF
} AttachmentLoadOp;

typedef enum AttachmentStoreOp
{
	ATTACHMENT_STORE_OP_STORE = 0,
	ATTACHMENT_STORE_OP_DONT_CARE = 1,
	ATTACHMENT_STORE_OP_MAX_ENUM = 0x7FFFFFFF
} AttachmentStoreOp;

typedef enum PipelineBindPoint
{
	PIPELINE_BIND_POINT_GRAPHICS = 0,
	PIPELINE_BIND_POINT_COMPUTE = 1,
	PIPELINE_BIND_POINT_MAX_ENUM = 0x7FFFFFFF
} PipelineBindPoint;

typedef enum DescriptorType
{
    DESCRIPTOR_TYPE_SAMPLER = 0,
    DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,
    DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,
    DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,
    DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,
    DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,
    DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,
    DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,
    DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,
    DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,
    DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10,
    DESCRIPTOR_TYPE_MAX_ENUM = 0x7FFFFFFF
} DescriptorType;

typedef enum PipelineStageFlagBits
{
    PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,
    PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,
    PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,
    PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,
    PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,
    PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,
    PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,
    PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,
    PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,
    PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,
    PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,
    PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,
    PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,
    PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,
    PIPELINE_STAGE_HOST_BIT = 0x00004000,
    PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,
    PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000,
    PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} PipelineStageFlagBits;

typedef uint32_t PipelineStageFlags;

typedef enum ShaderStageFlagBits
{
    SHADER_STAGE_VERTEX_BIT = 0x00000001,
    SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x00000002,
    SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x00000004,
    SHADER_STAGE_GEOMETRY_BIT = 0x00000008,
    SHADER_STAGE_FRAGMENT_BIT = 0x00000010,
    SHADER_STAGE_COMPUTE_BIT = 0x00000020,
    SHADER_STAGE_ALL_GRAPHICS = 0x0000001F,
    SHADER_STAGE_ALL = 0x7FFFFFFF,
    SHADER_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} ShaderStageFlagBits;

typedef uint32_t ShaderStageFlags;

typedef enum VertexInputRate
{
    VERTEX_INPUT_RATE_VERTEX = 0,
    VERTEX_INPUT_RATE_INSTANCE = 1,
    VERTEX_INPUT_RATE_MAX_ENUM = 0x7FFFFFFF
} VertexInputRate;

typedef enum PrimitiveTopology
{
    PRIMITIVE_TOPOLOGY_POINT_LIST = 0,
    PRIMITIVE_TOPOLOGY_LINE_LIST = 1,
    PRIMITIVE_TOPOLOGY_LINE_STRIP = 2,
    PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 3,
    PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 4,
    PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 5,
    PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 6,
    PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 7,
    PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 8,
    PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 9,
    PRIMITIVE_TOPOLOGY_PATCH_LIST = 10,
    PRIMITIVE_TOPOLOGY_MAX_ENUM = 0x7FFFFFFF
} PrimitiveTopology;

typedef enum PolygonMode
{
    POLYGON_MODE_FILL = 0,
    POLYGON_MODE_LINE = 1,
    POLYGON_MODE_POINT = 2,
    POLYGON_MODE_MAX_ENUM = 0x7FFFFFFF
} PolygonMode;

typedef enum CullModeFlagBits
{
    CULL_MODE_NONE = 0,
    CULL_MODE_FRONT_BIT = 0x00000001,
    CULL_MODE_BACK_BIT = 0x00000002,
    CULL_MODE_FRONT_AND_BACK = 0x00000003,
    CULL_MODE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} CullModeFlagBits;

typedef uint32_t CullModeFlags;

typedef enum CompareOp
{
    COMPARE_OP_NEVER = 0,
    COMPARE_OP_LESS = 1,
    COMPARE_OP_EQUAL = 2,
    COMPARE_OP_LESS_OR_EQUAL = 3,
    COMPARE_OP_GREATER = 4,
    COMPARE_OP_NOT_EQUAL = 5,
    COMPARE_OP_GREATER_OR_EQUAL = 6,
    COMPARE_OP_ALWAYS = 7,
    COMPARE_OP_MAX_ENUM = 0x7FFFFFFF
} CompareOp;

typedef enum LogicOp
{
    LOGIC_OP_CLEAR = 0,
    LOGIC_OP_AND = 1,
    LOGIC_OP_AND_REVERSE = 2,
    LOGIC_OP_COPY = 3,
    LOGIC_OP_AND_INVERTED = 4,
    LOGIC_OP_NO_OP = 5,
    LOGIC_OP_XOR = 6,
    LOGIC_OP_OR = 7,
    LOGIC_OP_NOR = 8,
    LOGIC_OP_EQUIVALENT = 9,
    LOGIC_OP_INVERT = 10,
    LOGIC_OP_OR_REVERSE = 11,
    LOGIC_OP_COPY_INVERTED = 12,
    LOGIC_OP_OR_INVERTED = 13,
    LOGIC_OP_NAND = 14,
    LOGIC_OP_SET = 15,
    LOGIC_OP_MAX_ENUM = 0x7FFFFFFF
} LogicOp;

typedef enum BlendFactor
{
    BLEND_FACTOR_ZERO = 0,
    BLEND_FACTOR_ONE = 1,
    BLEND_FACTOR_SRC_COLOR = 2,
    BLEND_FACTOR_ONE_MINUS_SRC_COLOR = 3,
    BLEND_FACTOR_DST_COLOR = 4,
    BLEND_FACTOR_ONE_MINUS_DST_COLOR = 5,
    BLEND_FACTOR_SRC_ALPHA = 6,
    BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = 7,
    BLEND_FACTOR_DST_ALPHA = 8,
    BLEND_FACTOR_ONE_MINUS_DST_ALPHA = 9,
    BLEND_FACTOR_CONSTANT_COLOR = 10,
    BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = 11,
    BLEND_FACTOR_CONSTANT_ALPHA = 12,
    BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = 13,
    BLEND_FACTOR_SRC_ALPHA_SATURATE = 14,
    BLEND_FACTOR_SRC1_COLOR = 15,
    BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = 16,
    BLEND_FACTOR_SRC1_ALPHA = 17,
    BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = 18,
    BLEND_FACTOR_MAX_ENUM = 0x7FFFFFFF
} BlendFactor;

typedef enum BlendOp
{
    BLEND_OP_ADD = 0,
    BLEND_OP_SUBTRACT = 1,
    BLEND_OP_REVERSE_SUBTRACT = 2,
    BLEND_OP_MIN = 3,
    BLEND_OP_MAX = 4,
    BLEND_OP_MAX_ENUM = 0x7FFFFFFF
} BlendOp;

typedef enum ColorComponentFlagBits
{
    COLOR_COMPONENT_R_BIT = 0x00000001,
    COLOR_COMPONENT_G_BIT = 0x00000002,
    COLOR_COMPONENT_B_BIT = 0x00000004,
    COLOR_COMPONENT_A_BIT = 0x00000008,
    COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} ColorComponentFlagBits;

typedef uint32_t ColorComponentFlags;

typedef enum DynamicState
{
    DYNAMIC_STATE_VIEWPORT = 0,
    DYNAMIC_STATE_SCISSOR = 1,
    DYNAMIC_STATE_LINE_WIDTH = 2,
    DYNAMIC_STATE_DEPTH_BIAS = 3,
    DYNAMIC_STATE_BLEND_CONSTANTS = 4,
    DYNAMIC_STATE_DEPTH_BOUNDS = 5,
    DYNAMIC_STATE_STENCIL_COMPARE_MASK = 6,
    DYNAMIC_STATE_STENCIL_WRITE_MASK = 7,
    DYNAMIC_STATE_STENCIL_REFERENCE = 8,
    DYNAMIC_STATE_MAX_ENUM = 0x7FFFFFFF
} DynamicState;

typedef enum AccessFlagBits
{
    ACCESS_INDIRECT_COMMAND_READ_BIT = 0x00000001,
    ACCESS_INDEX_READ_BIT = 0x00000002,
    ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,
    ACCESS_UNIFORM_READ_BIT = 0x00000008,
    ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x00000010,
    ACCESS_SHADER_READ_BIT = 0x00000020,
    ACCESS_SHADER_WRITE_BIT = 0x00000040,
    ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x00000080,
    ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,
    ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,
    ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,
    ACCESS_TRANSFER_READ_BIT = 0x00000800,
    ACCESS_TRANSFER_WRITE_BIT = 0x00001000,
    ACCESS_HOST_READ_BIT = 0x00002000,
    ACCESS_HOST_WRITE_BIT = 0x00004000,
    ACCESS_MEMORY_READ_BIT = 0x00008000,
    ACCESS_MEMORY_WRITE_BIT = 0x00010000,
    ACCESS_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} AccessFlagBits;

typedef uint32_t AccessFlags;

typedef enum QueueType
{
	QUEUE_TYPE_GRAPHICS = 0,
	QUEUE_TYPE_COMPUTE = 1,
	QUEUE_TYPE_TRANSFER = 2,
	QUEUE_TYPE_PRESENT = 3,
	QUEUE_TYPE_MAX_ENUM = 0x7FFFFFFF
} QueueType;

typedef enum CommandBufferUsageFlagBits
{
    COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x00000001,
    COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x00000002,
    COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x00000004,
    COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} CommandBufferUsageFlagBits;

typedef uint32_t CommandBufferUsageFlags;

typedef enum BufferUsageFlagBits
{
    BUFFER_USAGE_TRANSFER_SRC_BIT = 0x00000001,
    BUFFER_USAGE_TRANSFER_DST_BIT = 0x00000002,
    BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000004,
    BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = 0x00000008,
    BUFFER_USAGE_UNIFORM_BUFFER_BIT = 0x00000010,
    BUFFER_USAGE_STORAGE_BUFFER_BIT = 0x00000020,
    BUFFER_USAGE_INDEX_BUFFER_BIT = 0x00000040,
    BUFFER_USAGE_VERTEX_BUFFER_BIT = 0x00000080,
    BUFFER_USAGE_INDIRECT_BUFFER_BIT = 0x00000100,
    BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} BufferUsageFlagBits;

typedef uint32_t BufferUsageFlags;

typedef enum TextureLayout
{
    TEXTURE_LAYOUT_UNDEFINED = 0,
    TEXTURE_LAYOUT_GENERAL = 1,
    TEXTURE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,
    TEXTURE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,
    TEXTURE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,
    TEXTURE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,
    TEXTURE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,
    TEXTURE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,
    TEXTURE_LAYOUT_PREINITIALIZED = 8,
    TEXTURE_LAYOUT_MAX_ENUM = 0x7FFFFFFF
} TextureLayout;

typedef enum TextureUsageFlagBits
{
	TEXTURE_USAGE_TRANSFER_SRC_BIT = 0x00000001,
	TEXTURE_USAGE_TRANSFER_DST_BIT = 0x00000002,
	TEXTURE_USAGE_SAMPLED_BIT = 0x00000004,
	TEXTURE_USAGE_STORAGE_BIT = 0x00000008,
	TEXTURE_USAGE_COLOR_ATTACHMENT_BIT = 0x00000010,
	TEXTURE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000020,
	TEXTURE_USAGE_TRANSIENT_ATTACHMENT_BIT = 0x00000040,
	TEXTURE_USAGE_INPUT_ATTACHMENT_BIT = 0x00000080,
	TEXTURE_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} TextureUsageFlagBits;

typedef uint32_t TextureUsageFlags;

typedef enum TextureType
{
	TEXTURE_TYPE_1D = 0,
	TEXTURE_TYPE_2D = 1,
	TEXTURE_TYPE_3D = 2,
	TEXTURE_TYPE_MAX_ENUM
} TextureType;

typedef enum TextureViewType
{
	TEXTURE_VIEW_TYPE_1D = 0,
	TEXTURE_VIEW_TYPE_2D = 1,
	TEXTURE_VIEW_TYPE_3D = 2,
	TEXTURE_VIEW_TYPE_CUBE = 3,
	TEXTURE_VIEW_TYPE_1D_ARRAY = 4,
	TEXTURE_VIEW_TYPE_2D_ARRAY = 5,
	TEXTURE_VIEW_TYPE_CUBE_ARRAY = 6,
	TEXTURE_VIEW_TYPE_MAX_ENUM
} TextureViewType;

typedef enum SamplerFilter
{
	SAMPLER_FILTER_NEAREST = 0,
	SAMPLER_FILTER_LINEAR = 1,
	SAMPLER_FILTER_MAX_ENUM = 0x7FFFFFFF
} SamplerFilter;

typedef enum SamplerMipmapMode
{
	SAMPLER_MIPMAP_MODE_NEAREST = 0,
	SAMPLER_MIPMAP_MODE_LINEAR = 1,
	SAMPLER_MIPMAP_MODE_MAX_ENUM = 0x7FFFFFFF
} SamplerMipmapMode;

typedef enum SamplerAddressMode
{
	SAMPLER_ADDRESS_MODE_REPEAT = 0,
	SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 1,
	SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 2,
	SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 3,
	SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = 4,
	SAMPLER_ADDRESS_MODE_MAX_ENUM = 0x7FFFFFFF
} SamplerAddressMode;

typedef enum ResourceFormat
{
	TEXTURE_FORMAT_UNDEFINED = 0,
	TEXTURE_FORMAT_R4G4_UNORM_PACK8 = 1,
	TEXTURE_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,
	TEXTURE_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,
	TEXTURE_FORMAT_R5G6B5_UNORM_PACK16 = 4,
	TEXTURE_FORMAT_B5G6R5_UNORM_PACK16 = 5,
	TEXTURE_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,
	TEXTURE_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,
	TEXTURE_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,
	TEXTURE_FORMAT_R8_UNORM = 9,
	TEXTURE_FORMAT_R8_SNORM = 10,
	TEXTURE_FORMAT_R8_USCALED = 11,
	TEXTURE_FORMAT_R8_SSCALED = 12,
	TEXTURE_FORMAT_R8_UINT = 13,
	TEXTURE_FORMAT_R8_SINT = 14,
	TEXTURE_FORMAT_R8_SRGB = 15,
	TEXTURE_FORMAT_R8G8_UNORM = 16,
	TEXTURE_FORMAT_R8G8_SNORM = 17,
	TEXTURE_FORMAT_R8G8_USCALED = 18,
	TEXTURE_FORMAT_R8G8_SSCALED = 19,
	TEXTURE_FORMAT_R8G8_UINT = 20,
	TEXTURE_FORMAT_R8G8_SINT = 21,
	TEXTURE_FORMAT_R8G8_SRGB = 22,
	TEXTURE_FORMAT_R8G8B8_UNORM = 23,
	TEXTURE_FORMAT_R8G8B8_SNORM = 24,
	TEXTURE_FORMAT_R8G8B8_USCALED = 25,
	TEXTURE_FORMAT_R8G8B8_SSCALED = 26,
	TEXTURE_FORMAT_R8G8B8_UINT = 27,
	TEXTURE_FORMAT_R8G8B8_SINT = 28,
	TEXTURE_FORMAT_R8G8B8_SRGB = 29,
	TEXTURE_FORMAT_B8G8R8_UNORM = 30,
	TEXTURE_FORMAT_B8G8R8_SNORM = 31,
	TEXTURE_FORMAT_B8G8R8_USCALED = 32,
	TEXTURE_FORMAT_B8G8R8_SSCALED = 33,
	TEXTURE_FORMAT_B8G8R8_UINT = 34,
	TEXTURE_FORMAT_B8G8R8_SINT = 35,
	TEXTURE_FORMAT_B8G8R8_SRGB = 36,
	TEXTURE_FORMAT_R8G8B8A8_UNORM = 37,
	TEXTURE_FORMAT_R8G8B8A8_SNORM = 38,
	TEXTURE_FORMAT_R8G8B8A8_USCALED = 39,
	TEXTURE_FORMAT_R8G8B8A8_SSCALED = 40,
	TEXTURE_FORMAT_R8G8B8A8_UINT = 41,
	TEXTURE_FORMAT_R8G8B8A8_SINT = 42,
	TEXTURE_FORMAT_R8G8B8A8_SRGB = 43,
	TEXTURE_FORMAT_B8G8R8A8_UNORM = 44,
	TEXTURE_FORMAT_B8G8R8A8_SNORM = 45,
	TEXTURE_FORMAT_B8G8R8A8_USCALED = 46,
	TEXTURE_FORMAT_B8G8R8A8_SSCALED = 47,
	TEXTURE_FORMAT_B8G8R8A8_UINT = 48,
	TEXTURE_FORMAT_B8G8R8A8_SINT = 49,
	TEXTURE_FORMAT_B8G8R8A8_SRGB = 50,
	TEXTURE_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,
	TEXTURE_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,
	TEXTURE_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,
	TEXTURE_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,
	TEXTURE_FORMAT_A8B8G8R8_UINT_PACK32 = 55,
	TEXTURE_FORMAT_A8B8G8R8_SINT_PACK32 = 56,
	TEXTURE_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,
	TEXTURE_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,
	TEXTURE_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,
	TEXTURE_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,
	TEXTURE_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,
	TEXTURE_FORMAT_A2R10G10B10_UINT_PACK32 = 62,
	TEXTURE_FORMAT_A2R10G10B10_SINT_PACK32 = 63,
	TEXTURE_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,
	TEXTURE_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,
	TEXTURE_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,
	TEXTURE_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,
	TEXTURE_FORMAT_A2B10G10R10_UINT_PACK32 = 68,
	TEXTURE_FORMAT_A2B10G10R10_SINT_PACK32 = 69,
	TEXTURE_FORMAT_R16_UNORM = 70,
	TEXTURE_FORMAT_R16_SNORM = 71,
	TEXTURE_FORMAT_R16_USCALED = 72,
	TEXTURE_FORMAT_R16_SSCALED = 73,
	TEXTURE_FORMAT_R16_UINT = 74,
	TEXTURE_FORMAT_R16_SINT = 75,
	TEXTURE_FORMAT_R16_SFLOAT = 76,
	TEXTURE_FORMAT_R16G16_UNORM = 77,
	TEXTURE_FORMAT_R16G16_SNORM = 78,
	TEXTURE_FORMAT_R16G16_USCALED = 79,
	TEXTURE_FORMAT_R16G16_SSCALED = 80,
	TEXTURE_FORMAT_R16G16_UINT = 81,
	TEXTURE_FORMAT_R16G16_SINT = 82,
	TEXTURE_FORMAT_R16G16_SFLOAT = 83,
	TEXTURE_FORMAT_R16G16B16_UNORM = 84,
	TEXTURE_FORMAT_R16G16B16_SNORM = 85,
	TEXTURE_FORMAT_R16G16B16_USCALED = 86,
	TEXTURE_FORMAT_R16G16B16_SSCALED = 87,
	TEXTURE_FORMAT_R16G16B16_UINT = 88,
	TEXTURE_FORMAT_R16G16B16_SINT = 89,
	TEXTURE_FORMAT_R16G16B16_SFLOAT = 90,
	TEXTURE_FORMAT_R16G16B16A16_UNORM = 91,
	TEXTURE_FORMAT_R16G16B16A16_SNORM = 92,
	TEXTURE_FORMAT_R16G16B16A16_USCALED = 93,
	TEXTURE_FORMAT_R16G16B16A16_SSCALED = 94,
	TEXTURE_FORMAT_R16G16B16A16_UINT = 95,
	TEXTURE_FORMAT_R16G16B16A16_SINT = 96,
	TEXTURE_FORMAT_R16G16B16A16_SFLOAT = 97,
	TEXTURE_FORMAT_R32_UINT = 98,
	TEXTURE_FORMAT_R32_SINT = 99,
	TEXTURE_FORMAT_R32_SFLOAT = 100,
	TEXTURE_FORMAT_R32G32_UINT = 101,
	TEXTURE_FORMAT_R32G32_SINT = 102,
	TEXTURE_FORMAT_R32G32_SFLOAT = 103,
	TEXTURE_FORMAT_R32G32B32_UINT = 104,
	TEXTURE_FORMAT_R32G32B32_SINT = 105,
	TEXTURE_FORMAT_R32G32B32_SFLOAT = 106,
	TEXTURE_FORMAT_R32G32B32A32_UINT = 107,
	TEXTURE_FORMAT_R32G32B32A32_SINT = 108,
	TEXTURE_FORMAT_R32G32B32A32_SFLOAT = 109,
	TEXTURE_FORMAT_R64_UINT = 110,
	TEXTURE_FORMAT_R64_SINT = 111,
	TEXTURE_FORMAT_R64_SFLOAT = 112,
	TEXTURE_FORMAT_R64G64_UINT = 113,
	TEXTURE_FORMAT_R64G64_SINT = 114,
	TEXTURE_FORMAT_R64G64_SFLOAT = 115,
	TEXTURE_FORMAT_R64G64B64_UINT = 116,
	TEXTURE_FORMAT_R64G64B64_SINT = 117,
	TEXTURE_FORMAT_R64G64B64_SFLOAT = 118,
	TEXTURE_FORMAT_R64G64B64A64_UINT = 119,
	TEXTURE_FORMAT_R64G64B64A64_SINT = 120,
	TEXTURE_FORMAT_R64G64B64A64_SFLOAT = 121,
	TEXTURE_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,
	TEXTURE_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,
	TEXTURE_FORMAT_D16_UNORM = 124,
	TEXTURE_FORMAT_X8_D24_UNORM_PACK32 = 125,
	TEXTURE_FORMAT_D32_SFLOAT = 126,
	TEXTURE_FORMAT_S8_UINT = 127,
	TEXTURE_FORMAT_D16_UNORM_S8_UINT = 128,
	TEXTURE_FORMAT_D24_UNORM_S8_UINT = 129,
	TEXTURE_FORMAT_D32_SFLOAT_S8_UINT = 130,
	TEXTURE_FORMAT_BC1_RGB_UNORM_BLOCK = 131,
	TEXTURE_FORMAT_BC1_RGB_SRGB_BLOCK = 132,
	TEXTURE_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,
	TEXTURE_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,
	TEXTURE_FORMAT_BC2_UNORM_BLOCK = 135,
	TEXTURE_FORMAT_BC2_SRGB_BLOCK = 136,
	TEXTURE_FORMAT_BC3_UNORM_BLOCK = 137,
	TEXTURE_FORMAT_BC3_SRGB_BLOCK = 138,
	TEXTURE_FORMAT_BC4_UNORM_BLOCK = 139,
	TEXTURE_FORMAT_BC4_SNORM_BLOCK = 140,
	TEXTURE_FORMAT_BC5_UNORM_BLOCK = 141,
	TEXTURE_FORMAT_BC5_SNORM_BLOCK = 142,
	TEXTURE_FORMAT_BC6H_UFLOAT_BLOCK = 143,
	TEXTURE_FORMAT_BC6H_SFLOAT_BLOCK = 144,
	TEXTURE_FORMAT_BC7_UNORM_BLOCK = 145,
	TEXTURE_FORMAT_BC7_SRGB_BLOCK = 146,
	TEXTURE_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,
	TEXTURE_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,
	TEXTURE_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,
	TEXTURE_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,
	TEXTURE_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,
	TEXTURE_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,
	TEXTURE_FORMAT_EAC_R11_UNORM_BLOCK = 153,
	TEXTURE_FORMAT_EAC_R11_SNORM_BLOCK = 154,
	TEXTURE_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,
	TEXTURE_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,
	TEXTURE_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,
	TEXTURE_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,
	TEXTURE_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,
	TEXTURE_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,
	TEXTURE_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,
	TEXTURE_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,
	TEXTURE_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,
	TEXTURE_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,
	TEXTURE_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,
	TEXTURE_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,
	TEXTURE_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,
	TEXTURE_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,
	TEXTURE_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,
	TEXTURE_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,
	TEXTURE_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,
	TEXTURE_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,
	TEXTURE_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,
	TEXTURE_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,
	TEXTURE_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,
	TEXTURE_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,
	TEXTURE_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,
	TEXTURE_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,
	TEXTURE_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,
	TEXTURE_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,
	TEXTURE_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,
	TEXTURE_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,
	TEXTURE_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,
	TEXTURE_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,
	TEXTURE_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000,
	TEXTURE_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001,
	TEXTURE_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002,
	TEXTURE_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003,
	TEXTURE_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004,
	TEXTURE_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005,
	TEXTURE_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006,
	TEXTURE_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007,
	TEXTURE_FORMAT_MAX_ENUM = 0x7FFFFFFF
} ResourceFormat;

inline bool isDepthFormat (ResourceFormat format)
{
	switch (format)
	{
		case TEXTURE_FORMAT_D16_UNORM:
		case TEXTURE_FORMAT_X8_D24_UNORM_PACK32:
		case TEXTURE_FORMAT_D32_SFLOAT:
		case TEXTURE_FORMAT_D16_UNORM_S8_UINT:
		case TEXTURE_FORMAT_D24_UNORM_S8_UINT:
		case TEXTURE_FORMAT_D32_SFLOAT_S8_UINT:
			return true;
		default:
			return false;
	}
}

#endif /* RENDERING_RENDERER_RENDERERENUMS_H_ */
